{-
    storage#_ oracle:MsgAddressInt amountA:uint256 amountB:uint256 finished:Bool winner:Bool = Storage;
-}

const BET_CODE = "abcd";
const TONS_FOR_FEES = 100000000;
const TONS_FOR_BET_DEPLOY = 100000000;

(slice, int, int, int, int) load_data () inline {
    slice ds = get_data().begin_parse();
    return (ds~load_msg_addr(), ds~load_uint(256), ds~load_uint(256), ds~load_uint(1), ds~load_uint(1));
}

() save_data (slice oracle, int amountA, int amountB, int finished, int winner) impure {
    set_data(begin_cell()
        .store_slice(oracle)
        .store_uint(amountA, 256)
        .store_uint(amountB, 256)
        .store_uint(finished, 1)
        .store_uint(winner, 1)
    .end_cell());
}

() recv_internal (int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) { ;; ignore bounced messages
        return ();
    }

    slice sender = cs~load_msg_addr();
    (slice oracle, int amountA, int amountB, int finished, int winner) = load_data();

    int op = in_msg_body~load_uint(32);

    if (op == op::bet()) {
        int outcome = in_msg_body~load_uint(1);
        int amount = in_msg_body~load_uint(256);
        throw_unless(703, msg_value - TONS_FOR_FEES - TONS_FOR_BET_DEPLOY >= amount);
        throw_if(704, finished == 1);
        {-
            TODO: DEPLOY BET CONTRACT
        -}
        
        if (outcome == 0) {
            amountA += amount;
        } else {
            amountB += amount;
        }

        ;; cash back
        send_raw_message(begin_cell()
            .store_uint(0x18, 6)
            .store_slice(sender)
            .store_coins(0)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
        .end_cell(), 64);

        save_data(oracle, amountA, amountB, finished, winner);
    }
    
    elseif (op == op::process_bet()) {
        slice player = in_msg_body~load_msg_addr();
        int outcome = in_msg_body~load_uint(1);
        int amount = in_msg_body~load_uint(256);
        {-
            TODO: THROW IF NOT AUTHORIZED
        -}
        throw_if(704, finished == 0);

        if (outcome == winner) {
            ;; player won
            int prize = (amountA + amountB) * amount;
            if (winner == 0) {
                prize /= amountA;
            } else {
                prize /= amountB;
            }
            send_raw_message(begin_cell()
                .store_uint(0x18, 6)
                .store_slice(player)
                .store_coins(prize)
                .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .end_cell(), 3);
        }
    }

    elseif (op == op::finish_event()) {
        throw_unless(701, equal_slice_bits(sender, oracle));

        finished = 1;
        winner = in_msg_body~load_uint(1);

        save_data(oracle, amountA, amountB, finished, winner);
    }
}
